#!/bin/sh

# git-whoami is an additional Git command that tells you what author and
# committer information would (probably) be used for a commit. This is
# particularly helpful if you operate many different Git repositories with
# different identities (work, private, different projects). Inspired by bzr
# whoami.

# To be able to use it, just put it in your path somewhere. You can then call
# it as "git whoami" or directly as "git-whoami".

# Author: Peter Eisentraut <peter@eisentraut.org>
# Created: 2011-10-27
# License: WTFPL; see http://sam.zoy.org/wtfpl/

set -e

get_email() {
  git config user.email || ([ -n "$EMAIL" ] && echo "$EMAIL") || echo "$(id -nu)@$(hostname -f)"
}

get_name() {
  git config user.name || getent passwd $(id -un) | cut -d : -f 5 | cut -d , -f 1
}

: ${GIT_AUTHOR_NAME=$(get_name)}
: ${GIT_COMMITTER_NAME=$(get_name)}
: ${GIT_AUTHOR_EMAIL=$(get_email)}
: ${GIT_COMMITTER_EMAIL=$(get_email)}

author="$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
commit="$GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL>"

if [ "$author" = "$commit" ]; then
  echo "$author"
else
  echo "Author: $author"
  echo "Commit: $commit"
fi
